# Generated by Django 4.2.7 on 2024-06-22 09:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_days', models.IntegerField()),
                ('basic_hours_per_day', models.FloatField()),
                ('hourly_wage', models.FloatField()),
                ('overtime_multiplier', models.FloatField(default=1.5)),
                ('worked_day_off_multiplier', models.FloatField(default=2.0)),
                ('sunday_multiplier', models.FloatField(default=2.0)),
                ('holiday_multiplier', models.FloatField(default=3.0)),
            ],
            options={
                'verbose_name': 'Configuration',
                'verbose_name_plural': 'Configurations',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('month', models.IntegerField()),
                ('day', models.IntegerField()),
            ],
            options={
                'ordering': ['month', 'day'],
                'unique_together': {('month', 'day')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PayrollManager.department')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PayrollManager.employee')),
            ],
            options={
                'unique_together': {('employee', 'department')},
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='departments',
            field=models.ManyToManyField(through='PayrollManager.EmployeeDepartment', to='PayrollManager.department'),
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('basic_days_after_holidays', models.IntegerField()),
                ('basic_hours_after_holidays', models.FloatField()),
                ('actual_work_hours', models.FloatField()),
                ('worked_days', models.IntegerField()),
                ('penalty_hours', models.FloatField()),
                ('worked_day_off_days', models.IntegerField()),
                ('sunday_hours', models.FloatField()),
                ('holiday_hours', models.FloatField()),
                ('worked_holiday_hours', models.FloatField()),
                ('average_hours_per_day', models.FloatField()),
                ('worked_day_off_hours', models.FloatField()),
                ('overtime_hours', models.FloatField()),
                ('total_hours', models.FloatField()),
                ('salary_amount', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PayrollManager.employee')),
            ],
            options={
                'unique_together': {('employee', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('morning_clock_in', models.TimeField(blank=True, null=True)),
                ('morning_clock_out', models.TimeField(blank=True, null=True)),
                ('afternoon_clock_in', models.TimeField(blank=True, null=True)),
                ('afternoon_clock_out', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PayrollManager.employee')),
            ],
            options={
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
